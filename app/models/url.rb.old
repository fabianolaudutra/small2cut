class Url < ApplicationRecord
    ID_UNIQUE_LENGTH= 6
    self.primary_key = "url"
    validates :url, presence:true, on: :create
    validates_format_of :url,
        with: /\A(?:(http|https):\/\/)?([-a-zA-Z0-9.]{2,256}\.[a-z]{2,4})\b(?:\/[-a-zA-Z0-9@,!:%_\+.~#?&\/\/=]*)?\z/
    before_create :create_short_url
    before_create :sanear
    
     def create_short_url
         url = ([*('a'..'z'),*('0'..'9')]).sample(ID_UNIQUE_LENGTH).join
         url_old = Url.where(shortUrl: url).last
         if url_old.present?
             self.create_short_url
         else
             self.shortUrl = url
         end
     end

     def find_duplicate        
         Url.where(sanear: self.sanear)
     end
  
     def new_url?
         puts "entrou"
         find_duplicate.nil?
     end
    
    def sanear
        puts "SAIDA URL CREATE: #{self.url}"
        self.url.strip!
        sanear_ret = self.url.downcase.gsub(/(https?:\/\/)|(www\.)/,"")
        #puts "SAIDA URL CREATE 2: #{self.url.downcase.gsub(/(https?:\/\/)|(www\.)/,"")}"
        self.sanear = "http://#{sanear_ret}"
    end

end
